{{- define "helmet.configmap" -}}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "common.names.fullname" . }}
  namespace: {{ include "common.names.namespace" . | quote }}
  labels: {{- include "common.labels.standard" . | nindent 4 }}
    {{- if .Values.commonLabels }}
    {{- include "common.tplvalues.render" ( dict "value" .Values.commonLabels "context" $ ) | nindent 4 }}
    {{- end }}
    {{- if .Values.configMap.labels }}
    {{- include "common.tplvalues.render" ( dict "value" .Values.configMap.labels "context" $ ) | nindent 4 }}
    {{- end }}
  {{- if or .Values.configMap.annotations .Values.commonAnnotations }}
  annotations:
    {{- if .Values.configMap.annotations }}
    {{- include "common.tplvalues.render" ( dict "value" .Values.configMap.annotations "context" $ ) | nindent 4 }}
    {{- end }}
    {{- if .Values.commonAnnotations }}
    {{- include "common.tplvalues.render" ( dict "value" .Values.commonAnnotations "context" $ ) | nindent 4 }}
    {{- end }}
  {{- end }}
data:
{{- if .Values.configMap.data }}
  {{- range $k, $v := .Values.configMap.data }}
  {{- $configKey := (include "common.tplvalues.render" (dict "value" $k "context" $)) }}
  {{- $configValue := (include "common.tplvalues.render" (dict "value" $v "context" $)) }}
  {{- if or (typeIs "map[string]interface {}" $v) (typeIs "string" $v) }}
  {{ $configKey }}: |- {{ $configValue | nindent 4 }}
  {{- else }}
  {{ $configKey }}: {{ $configValue }}
  {{- end }}
  {{- end }}
# Allow parsing files from /env/shared and /shared/<env> folder
{{- end }}
{{- $self := . -}} 
{{- $sources := (list "shared" .Values.env) }}
{{- range $env := $sources }}
{{- range $path, $bytes := $self.Files.Glob (printf "env/%s/*" $env) }}
  {{ base $path }}: {{ tpl ($self.Files.Get $path) $ | quote }}
{{- end }}
{{- end }}
{{- end -}}
